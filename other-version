diff --git a/main.go b/main.go
index f6283fb..ff09faf 100644
--- a/main.go
+++ b/main.go
@@ -22,24 +22,20 @@ func main() {
 }
 
 func lottoNumbers(n int) [][]int {
-	var list = [][]int{}
-	rand.Seed(time.Now().UnixNano())
+	var parallelCount = 10
+	var iterations = n/parallelCount
+	var list = make([][]int, parallelCount*iterations)
+	var wg sync.WaitGroup
 
-	rec := make(chan []int, n)
+	wg.Add(parallelCount)
+	for i := 0; i < parallelCount; i++ {
+		go func() {
+			defer wg.Done()
 
-	go func(c chan []int) {
-		for {
-			list = append(list, <-c)
-		}
-	}(rec)
+			r := rand.New(rand.NewSource(time.Now().UnixNano()))
 
-	var wg sync.WaitGroup
-	for i := 0; i < 10; i++ {
-		wg.Add(1)
-		func() {
-			defer wg.Done()
-			for i := 0; i < n; i++ {
-				add(rec)
+			for i := 0; i < iterations; i++ {
+				list[parallelCount*iterations-1] = add(r)
 			}
 		}()
 	}
@@ -48,14 +44,14 @@ func lottoNumbers(n int) [][]int {
 	return list
 }
 
-func add(c chan []int) {
-	c <- []int{
-		rand.Intn(49),
-		rand.Intn(49),
-		rand.Intn(49),
-		rand.Intn(49),
-		rand.Intn(49),
-		rand.Intn(49),
-		rand.Intn(49),
+func add(r *rand.Rand) []int {
+	return []int{
+		r.Intn(49),
+		r.Intn(49),
+		r.Intn(49),
+		r.Intn(49),
+		r.Intn(49),
+		r.Intn(49),
+		r.Intn(49),
 	}
 }
